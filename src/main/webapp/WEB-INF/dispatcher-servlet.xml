<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
	       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
       	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       ">

	<!-- Scan for spring annotated components -->
	<context:component-scan base-package="com.decision.maker.controller" />
	<context:component-scan base-package="com.decision.maker.repository" />
	<context:component-scan base-package="com.decision.maker.service" />

	<context:property-placeholder location="classpath:/application.properties" />

	<tx:annotation-driven/>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${oracle.jdbc.driver.name}" />
		<property name="url" value="${oracle.jdbc.url}" />
		<property name="username" value="${oracle.jdbc.username}" />
		<property name="password" value="${oracle.jdbc.password}" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		lazy-init="true">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${oracle.hibernate.dialect.property}</prop>
				<prop key="hibernate.show_sql">${hibernate.display.sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
				<prop key="hibernate.connection.pool_size">3</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.decision.maker.domain" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- Process annotations on registered beans like @Autowired... -->
	<context:annotation-config />

	<!-- This tag registers the DefaultAnnotationHandlerMapping and AnnotationMethodHandlerAdapter 
		beans that are required for Spring MVC -->
    <mvc:annotation-driven>
		<mvc:message-converters>
			<!-- Use the HibernateAware mapper instead of the default -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.decision.maker.util.serializer.HibernateAwareObjectMapper" />
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- Exception Resolver that resolves exceptions through @ExceptionHandler methods -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver" />

	<!-- View Resolver for JSPs -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- resources exclusions from servlet mapping -->
	<mvc:resources mapping="/lib/**" location="/lib/" />

</beans>